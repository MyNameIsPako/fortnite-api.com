/*
/$$$$$$$           /$$                
| $$__  $$         | $$                
| $$  \ $$ /$$$$$$ | $$   /$$  /$$$$$$ 
| $$$$$$$/|____  $$| $$  /$$/ /$$__  $$
| $$____/  /$$$$$$$| $$$$$$/ | $$  \ $$
| $$      /$$__  $$| $$_  $$ | $$  | $$
| $$     |  $$$$$$$| $$ \  $$|  $$$$$$/
|__/      \_______/|__/  \__/ \______/ 

=================== INFO ==================
==> Guia creada por !Pako (@mynameispako)
==> Unete a mi servidor para mas ayuda: https://dsc.gg/pakosarmy
*/

//! ====================[ PRINCIPAL ]====================

// En esta gu칤a, utilizaremos la API de fortnite-api.com. Necesitar치s una Key que encontrar치s en la dashboard aqu칤: https://dash.fortnite-api.com.

// Empezamos agregando el m칩dulo que necesitamos a trav칠s de npm y algunos parametros que requerimos para el uso
const axios = require("axios");
const lenguaje = "es"; // puedes a침adir varios idiomas por defecto esta en ingles si no se a침ade
const key = "123456789"; // aqui pondras la key

// Creamos el c칩digo de ejemplo que servir치 como base para cualquier otra tarea. 칔nicamente se modificar치 la URL u otros par치metros esenciales. Tambi칠n implementaremos un bloque "try" para manejar posibles errores durante la ejecuci칩n del c칩digo.
try {
  const respuesta = await axios.get(
    `Aqui pones la url donde quieras extraer los datos de la API`, // la url esta en la web
    {
      headers: {
        Authorization: key, // la Key esta en la dash
      },
    }
  );

  // Este c칩digo manejar치 la situaci칩n en la que la web no responda como se espera. Por ejemplo, si se requiere un nombre de usuario y dicho usuario no existe, se mostrar치 el siguiente mensaje de error.
  if (!respuesta.data.result) {
    console.log(
      `[ERROR] :: No se encontro ningun resultado en la respuesta de la API`
    );
  }

  // Si la respuesta es correcta, imprimir치 el resultado aqu칤.
  const datos = respuesta.data;

  // En esta secci칩n, visualizaremos los datos en la consola. Al revisar los resultados, podr치s extraer la informaci칩n que desees. Por ejemplo, si la API tiene un par치metro llamado "id", podr칤amos acceder a 칠l mediante la sintaxis datos.id para ver el valor correspondiente a la id.
  console.log(datos);
} catch (error) {
  console.error(
    "[ERROR] :: Ocurrio un error al obtener la respuesta, el error a sido: 游녢",
    error
  );
}

//! ====================[ GUIAS DE CODIGOS ]====================

// Ahora, en esta secci칩n, crearemos las respuestas correspondientes para cada caso. Estas respuestas ser치n colocadas sobre el primer c칩digo que hemos elaborado.

// AES => Devuelve la Key AES aes actual
const AES = await axios.get(`https://fortnite-api.com/v2/aes`, {
  headers: {
    Authorization: key,
  },
});
console.log(AES.data);

// BANNERS => Retorna un array de los banners
const BANNERS = await axios.get(`https://fortnite-api.com/v1/banners`, {
  headers: {
    Authorization: key,
  },
  params: {
    lenguaje,
  },
});
console.log(BANNERS.data);

// Estos ejemplos ilustran el funcionamiento general; simplemente revisa los par치metros espec칤ficos y ajusta seg칰n sea necesario. Puedes agregar o eliminar par치metros seg칰n la documentaci칩n de la API.

// COSMETIC => Retorna un cosmetico una una ID que proporciones

// Aqu칤 tenemos un nuevo par치metro ${cosm칠tico}, el cual se encuentra en muchos otros par치metros. Esto se debe a la b칰squeda; simplemente necesitas identificar qu칠 se requiere, ya sea un ID o un nombre, y agregarlo. En este caso, hemos introducido una constante con un nombre y el ID del elemento. Ahora te corresponde ajustar tu comando en funci칩n de estos valores.

const cosmetico = "473847324738973824732894279328473";
const COSMETIC = await axios.get(
  `https://fortnite-api.com/v2/cosmetics/br/${cosmetico}`,
  {
    headers: {
      Authorization: key,
    },
    params: {
      lenguaje,
    },
  }
);
console.log(COSMETIC.data);

//! ====================[ PARTE FINAL ]====================

// Muchos de los par치metros dependen de otros, algunos son obligatorios y deben ser incluidos, mientras que otros son opcionales. Toda esta informaci칩n se encuentra detallada en la documentaci칩n de la web. Si tienes alguna pregunta o duda, no dudes en visitar mi servidor, estar칠 encantado de ayudarte sin ning칰n problema.
